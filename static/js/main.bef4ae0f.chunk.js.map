{"version":3,"sources":["components/nav/nav.styles.jsx","components/nav/nav.component.jsx","pages/not-found/not-found.styles.jsx","components/button/button.styles.jsx","components/button/button.component.jsx","pages/not-found/not-found.component.jsx","components/spinner/spinner.component.jsx","components/avatar-details/avatar-details.styles.jsx","components/avatar-details/avatar-details.component.jsx","pages/about/about.styles.jsx","pages/about/about.component.jsx","components/searchbox/search-box.styles.jsx","components/searchbox/search-box.component.jsx","components/card/card.styles.jsx","components/card/card.component.jsx","components/cardList/card-list.styles.jsx","components/cardList/card-list.component.jsx","components/scroll/scroll.styles.jsx","components/scroll/scroll.component.jsx","components/directory/directory.styles.jsx","components/directory/directory.component.jsx","pages/homepage/homepage.component.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["NavContainer","styled","div","_templateObject","LogoText","h1","_templateObject2","NavList","ul","_templateObject3","NavItem","li","_templateObject4","Nav","react_default","a","createElement","react_router_dom","to","Container","not_found_styles_templateObject","Text","not_found_styles_templateObject2","ButtonLink","Link","button_styles_templateObject","Button","props","children","NotFound","button_component","override","display","margin","borderColor","Spinner","_useState","useState","loading","Object","slicedToArray","className","style","marginTop","dist","sizeUnit","size","color","AvatarCardContainer","avatar_details_styles_templateObject","primary","css","avatar_details_styles_templateObject2","AvatarImage","img","avatar_details_styles_templateObject3","AvatarProfile","avatar_details_styles_templateObject4","AvatarText","h2","_templateObject5","AvatarDetails","span","_templateObject6","_ref","match","_useState2","avatar","setAvatar","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","responseAvatar","jsonAvatar","wrap","_context","prev","next","fetch","concat","params","id","sent","json","stop","apply","this","arguments","getAvatar","name","username","email","phone","website","src","alt","spinner_component","AboutContainer","about_styles_templateObject","about_styles_templateObject2","TextDescription","p","about_styles_templateObject3","About","about_styles_Text","SearchBoxContainer","search_box_styles_templateObject","SearchBoxInput","input","search_box_styles_templateObject2","SearchBoxText","search_box_styles_templateObject3","SearchBox","searchChange","type","placeholder","onChange","CardContainer","card_styles_templateObject","ImageStyle","card_styles_templateObject2","CardProfileContainer","card_styles_templateObject3","CardText","card_styles_templateObject4","CardParagraph","card_styles_templateObject5","Card","CardListContainer","card_list_styles_templateObject","CardList","avatars","map","otherProps","esm_extends","card_component","assign","key","uuid","ScrollContainer","scroll_styles_templateObject","Scroll","DirectoryContainer","directory_styles_templateObject","TextMessage","directory_styles_templateObject2","Directory","setAvatars","_useState3","_useState4","searchfield","setSearchField","getAvatars","filterdAvatars","filter","toLowerCase","includes","length","Fragment","search_box_component","e","target","value","scroll_component","card_list_component","HomePage","directory_component","App","basename","process","nav_component","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bef4ae0f.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const NavContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 7rem;\n  margin-bottom: 3.2rem;\n  box-shadow: 0px 0px 6px 0 rgba(0, 0, 0, 0.2);\n`;\n\nexport const LogoText = styled.h1`\n  font-size: 2rem;\n`;\n\nexport const NavList = styled.ul`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  list-style-type: none;\n  padding: 0;\n`;\n\nexport const NavItem = styled.li`\n  padding: 0 1rem;\n  font-size: 1.4rem;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { NavContainer, LogoText, NavList, NavItem } from './nav.styles';\n\nconst Nav = () => {\n  return (\n    <NavContainer>\n      <Link to=\"/\">\n        <LogoText>Adorable Avatar</LogoText>\n      </Link>\n      <NavList>\n        <Link to=\"/about\">\n          <NavItem>アプリについて</NavItem>\n        </Link>\n      </NavList>\n    </NavContainer>\n  );\n};\n\nexport default Nav;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  text-align: center;\n`;\n\nexport const Text = styled.h1`\n  font-size: 2.4rem;\n`;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const ButtonLink = styled(Link)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #fff;\n  width: 10rem;\n  height: 4rem;\n  font-size: 1.4rem;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  outline: none;\n  margin: 1.5rem auto;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n","import React from 'react';\n\nimport { ButtonLink } from './button.styles';\n\nconst Button = props => <ButtonLink to=\"/\">{props.children}</ButtonLink>;\n\nexport default Button;\n","import React from 'react';\nimport { Container, Text } from './not-found.styles';\n\nimport Button from '../../components/button/button.component';\n\nconst NotFound = () => {\n  return (\n    <Container>\n      <Text>\n        お探しのページは見つかりませんでした。\n        {/* <i>{props.location.pathname}</i> */}\n      </Text>\n      <Button to=\"/\">Go Back</Button>\n    </Container>\n  );\n};\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport { ClipLoader } from 'react-spinners';\n\nconst override = {\n  display: 'block',\n  margin: '0 auto',\n  borderColor: 'red'\n};\n\nconst Spinner = () => {\n  const [loading] = useState(true);\n\n  return (\n    <div className=\"sweet-loading\" style={{ marginTop: '100px' }}>\n      <ClipLoader\n        style={override}\n        sizeUnit={'px'}\n        size={80}\n        color={'#81bef1'}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import styled, { css } from 'styled-components';\n\nexport const AvatarCardContainer = styled.div`\n  box-shadow: 0px 0px 6px 0 rgba(0, 0, 0, 0.2);\n  width: 30rem;\n  height: auto;\n  margin: 0 auto;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  span {\n    font-size: 1.6rem;\n  }\n\n  ${props =>\n    props.primary &&\n    css`\n      box-shadow: none;\n    `}  \n  }\n`;\n\nexport const AvatarImage = styled.img`\n  border-radius: 50%;\n  width: 80%;\n  height: auto;\n  padding: 1rem 0;\n  margin: 0 auto;\n`;\n\nexport const AvatarProfile = styled.div`\n  display: flex;\n  flex-flow: wrap column;\n`;\n\nexport const AvatarText = styled.h2`\n  font-size: 1.8rem;\n  text-align: center;\n`;\n\nexport const UserNameSpan = styled.span``;\n","import React, { useState, useEffect } from 'react';\nimport Spinner from '../spinner/spinner.component';\nimport Button from '../button/button.component';\n\nimport {\n  AvatarCardContainer,\n  AvatarImage,\n  AvatarProfile,\n  AvatarText\n} from './avatar-details.styles';\n\nconst AvatarDetails = ({ match }) => {\n  const [avatar, setAvatar] = useState([]);\n\n  useEffect(() => {\n    const getAvatar = async () => {\n      const responseAvatar = await fetch(\n        `https://jsonplaceholder.typicode.com/users/${match.params.id}`\n      );\n      const jsonAvatar = await responseAvatar.json();\n\n      setAvatar(jsonAvatar);\n    };\n\n    getAvatar();\n  }, []);\n\n  {\n    const { id, name, username, email, phone, website } = avatar;\n    return id ? (\n      <AvatarCardContainer>\n        <AvatarImage\n          src={`https://robohash.org/${match.params.id}?set=set4`}\n          alt=\"avatars\"\n        />\n\n        <AvatarProfile>\n          <AvatarText>{`name: ${name}`}</AvatarText>\n          <span>{`username: ${username}`}</span>\n          <span>{`Email:  ${email}`}</span>\n          <span>{`Tel:  ${phone}`}</span>\n          <span>{`Web:  ${website}`}</span>\n        </AvatarProfile>\n        <Button> Back </Button>\n      </AvatarCardContainer>\n    ) : (\n      <AvatarCardContainer primary>\n        <Spinner />\n      </AvatarCardContainer>\n    );\n  }\n};\n\nexport default AvatarDetails;\n","import styled from 'styled-components';\n\nexport const AboutContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 2rem;\n`;\n\nexport const Text = styled.h1`\n  font-size: 3.2rem;\n`;\n\nexport const TextDescription = styled.p`\n  font-size: 1.6rem;\n`;\n","import React from 'react';\nimport { AboutContainer, Text, TextDescription } from './about.styles';\n\nconst About = () => (\n  <AboutContainer>\n    <Text>Adorable Avatar</Text>\n    <TextDescription>\n      サーチボックスに入力された文字にマッチするアバター達の画像を表示することができます。\n    </TextDescription>\n  </AboutContainer>\n);\n\nexport default About;\n","import styled from 'styled-components';\n\nexport const SearchBoxContainer = styled.div`\n  margin-bottom: 3.2rem;\n`;\n\nexport const SearchBoxInput = styled.input`\n  font-size: 1.6rem;\n  padding: 1rem 2rem;\n  border: 1px solid #808080;\n`;\n\nexport const SearchBoxText = styled.p`\n  font-size: 1.2rem;\n  color: rgba(51, 51, 51, 0.7);\n`;\n","import React from 'react';\nimport {\n  SearchBoxContainer,\n  SearchBoxInput,\n  SearchBoxText\n} from './search-box.styles';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <SearchBoxContainer>\n      <SearchBoxInput\n        type=\"search\"\n        placeholder=\"アバターを検索\"\n        onChange={searchChange}\n      />\n      <SearchBoxText>アルファベットでタイプしてみよう！</SearchBoxText>\n    </SearchBoxContainer>\n  );\n};\n\nexport default SearchBox;\n","import styled from 'styled-components';\n\nexport const CardContainer = styled.div`\n  width: 25rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-shadow: 0px 0px 6px 0 rgba(0, 0, 0, 0.2);\n\n  padding: 2rem;\n  margin: 2rem;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const ImageStyle = styled.img`\n  border-radius: 50%;\n  width: 20rem;\n  height: 20rem;\n`;\n\nexport const CardProfileContainer = styled.div`\n  height: 10rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n\n  .card-name {\n    margin: 0;\n    font-size: 1.6rem;\n  }\n\n  .card-email {\n    font-size: 1.4rem;\n  }\n`;\n\nexport const CardText = styled.h2`\n  margin: 0;\n  font-size: 1.6rem;\n`;\n\nexport const CardParagraph = styled.p`\n  font-size: 1.4rem;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  CardContainer,\n  ImageStyle,\n  CardProfileContainer,\n  CardText,\n  CardParagraph\n} from './card.styles';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <CardContainer>\n      <Link to={`/avatars/${id}`}>\n        <ImageStyle src={`https://robohash.org/${id}?set=set4`} alt=\"avatars\" />\n        <CardProfileContainer>\n          <CardText>{name}</CardText>\n          <CardParagraph>{email}</CardParagraph>\n        </CardProfileContainer>\n      </Link>\n    </CardContainer>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const CardListContainer = styled.div`\n  width: 100%;\n  flex-wrap: wrap;\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport Card from '../card/card.component';\n\nimport uuid from 'uuid/v4';\n\nimport { CardListContainer } from './card-list.styles';\n\nconst CardList = ({ avatars }) => {\n  return (\n    <CardListContainer>\n      {avatars.map(({ ...otherProps }) => {\n        return <Card key={uuid()} {...otherProps} />;\n      })}\n    </CardListContainer>\n  );\n};\n\nexport default CardList;\n","import styled from 'styled-components';\n\nexport const ScrollContainer = styled.div`\n  overflow-y: scroll;\n\n  height: 100vh;\n  border: 1px dotted #ddd;\n  padding: 0 2rem;\n\n  -webkit-overflow-scrolling: touch;\n`;\n","import React from 'react';\nimport { ScrollContainer } from './scroll.styles';\n\nconst Scroll = props => {\n  return <ScrollContainer>{props.children}</ScrollContainer>;\n};\n\nexport default Scroll;\n","import styled from 'styled-components';\n\nexport const DirectoryContainer = styled.div`\n  text-align: center;\n`;\n\nexport const TextMessage = styled.p`\n  width: 25rem;\n  line-height: 1.8;\n  margin: 0 auto;\n  padding: 2rem;\n  font-size: 1.6rem;\n`;\n","import React, { useState, useEffect } from 'react';\nimport SearchBox from '../searchbox/search-box.component';\nimport CardList from '../cardList/card-list.component';\nimport Scroll from '../scroll/scroll.component';\nimport Spinner from '../spinner/spinner.component';\n\nimport { TextMessage, DirectoryContainer } from './directory.styles';\n\nconst Directory = () => {\n  const [avatars, setAvatars] = useState([]);\n  const [searchfield, setSearchField] = useState('');\n\n  useEffect(() => {\n    const getAvatars = async () => {\n      const responseAvatar = await fetch(\n        'https://jsonplaceholder.typicode.com/users'\n      );\n      const jsonAvatar = await responseAvatar.json();\n\n      setAvatars(jsonAvatar);\n    };\n\n    getAvatars();\n  }, []);\n\n  const onSearchChange = e => {\n    setSearchField(e.target.value);\n  };\n\n  const filterdAvatars = avatars.filter(avatar => {\n    return avatar.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  return (\n    <DirectoryContainer>\n      {avatars.length ? (\n        <React.Fragment>\n          <SearchBox searchChange={onSearchChange} />\n          <Scroll>\n            {filterdAvatars.length ? (\n              <CardList avatars={filterdAvatars} />\n            ) : (\n              <TextMessage>\n                入力内容にマッチするアバターが見つかりませんでした...\n              </TextMessage>\n            )}\n          </Scroll>\n        </React.Fragment>\n      ) : (\n        <DirectoryContainer>\n          <Spinner />\n          <p>Loading Now...</p>\n        </DirectoryContainer>\n      )}\n    </DirectoryContainer>\n  );\n};\n\nexport default Directory;\n","import React from 'react';\nimport Directory from '../../components/directory/directory.component';\n\nconst HomePage = () => {\n  return (\n    <section>\n      <Directory />\n    </section>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Nav from '../components/nav/nav.component';\nimport NotFound from '../pages/not-found/not-found.component';\nimport AvatarDetails from '../components/avatar-details/avatar-details.component';\nimport About from '../pages/about/about.component';\nimport HomePage from '../pages/homepage/homepage.component';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/avatars/:id\" component={AvatarDetails} />\n        <Route path=\"/about\" component={About} />\n        <Route component={NotFound} />>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}