{"version":3,"sources":["components/nav/nav.component.jsx","pages/not-found.component.jsx","components/spinner/spinner.component.jsx","components/button/button.component.jsx","components/avatar-details/avatar-details.component.jsx","pages/about/about.component.jsx","components/searchbox/search-box.component.jsx","components/card/card.component.jsx","components/cardList/card-list.component.jsx","components/scroll/scroll.component.jsx","components/directory/directory.component.jsx","pages/homepage/homepage.component.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","react_router_dom","to","NotFound","props","style","textAlign","location","pathname","override","display","margin","borderColor","Spinner","_useState","useState","loading","Object","slicedToArray","marginTop","dist","sizeUnit","size","color","Button","children","AvatarDetails","_ref","match","_useState2","avatar","setAvatar","useEffect","_ref2","asyncToGenerator","regenerator_default","mark","_callee","responseAvatar","jsonAvatar","wrap","_context","prev","next","fetch","concat","params","id","sent","json","stop","apply","this","arguments","getAvatar","name","username","email","phone","website","src","alt","button_component","spinner_component","About","SearchBox","searchChange","type","placeholder","onChange","Card","CardList","avatars","map","otherProps","esm_extends","card_component","assign","key","uuid","Scroll","Directory","setAvatars","_useState3","_useState4","searchfield","setSearchField","getAvatars","filterdAvatars","filter","toLowerCase","includes","length","Fragment","search_box_component","e","target","value","scroll_component","card_list_component","HomePage","directory_component","App","basename","process","nav_component","react_router","exact","path","component","Boolean","window","hostname","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df0652f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './nav.styles.scss';\n\nconst Nav = () => {\n  return (\n    <nav className=\"nav\">\n      <Link to=\"/\">\n        <h1 className=\"logo\">Adorable Avatar</h1>\n      </Link>\n      <ul className=\"nav-item-list\">\n        <Link to=\"/about\">\n          <li className=\"nav-item\">アプリについて</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst NotFound = props => {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h1>\n        No match for <i>{props.location.pathname}</i>\n      </h1>\n      <Link to=\"/\">Go Back</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React, { useState } from 'react';\nimport { ClipLoader } from 'react-spinners';\n\nconst override = {\n  display: 'block',\n  margin: '0 auto',\n  borderColor: 'red'\n};\n\nconst Spinner = () => {\n  const [loading] = useState(true);\n\n  return (\n    <div className=\"sweet-loading\" style={{ marginTop: '100px' }}>\n      <ClipLoader\n        style={override}\n        sizeUnit={'px'}\n        size={80}\n        color={'#81bef1'}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './button.styles.scss';\n\nconst Button = props => (\n  <Link to=\"/\">\n    <button className=\"button\">{props.children}</button>\n  </Link>\n);\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\nimport Spinner from '../spinner/spinner.component';\nimport Button from '../button/button.component';\n\nimport './avatar-details.styles.scss';\n\nconst AvatarDetails = ({ match }) => {\n  const [avatar, setAvatar] = useState([]);\n\n  useEffect(() => {\n    const getAvatar = async () => {\n      const responseAvatar = await fetch(\n        `https://jsonplaceholder.typicode.com/users/${match.params.id}`\n      );\n      const jsonAvatar = await responseAvatar.json();\n\n      setAvatar(jsonAvatar);\n    };\n\n    getAvatar();\n  }, []);\n\n  {\n    const { id, name, username, email, phone, website } = avatar;\n    return id ? (\n      <div className=\"avatar-card\">\n        <img\n          src={`https://robohash.org/${match.params.id}?set=set4`}\n          alt=\"avatars\"\n          className=\"card-image\"\n        />\n\n        <div className=\"avatar-profile\">\n          <h2 className=\"name\">{`name: ${name}`}</h2>\n          <span className=\"username\">{`username: ${username}`}</span>\n          <span>{`Email:  ${email}`}</span>\n          <span>{`Tel:  ${phone}`}</span>\n          <span>{`Web:  ${website}`}</span>\n        </div>\n        <Button> Back </Button>\n      </div>\n    ) : (\n      <div className=\"avatar-card spinner\">\n        <Spinner />\n      </div>\n    );\n  }\n};\n\nexport default AvatarDetails;\n/* \n\n\n<div className=\"avatar-card\">\n        <img\n          src={`https://robohash.org/${match.params.id}?set=set4`}\n          alt=\"avatars\"\n          className=\"card-image\"\n        />\n\n        <div className=\"avatar-profile\">\n          <h2 className=\"name\">{`name: ${name}`}</h2>\n          <span className=\"username\">{`username: ${username}`}</span>\n          <span>{`email: ${email}`}</span>\n          <span>{`phone: ${phone}`}</span>\n          <span>{`web: ${website}`}</span>\n        </div>\n      </div>\n\n*/\n","import React from 'react';\n\nimport './about.styles.scss';\n\nconst About = () => (\n  <div className=\"about\">\n    <h1 className=\"title\">Adorable Avatar</h1>\n    <p className=\"description\">\n      サーチボックスに入力された文字にマッチするアバター達の画像を表示することができます。\n    </p>\n  </div>\n);\n\nexport default About;\n","import React from 'react';\n\nimport './search-box.styles.scss';\n\nconst SearchBox = ({ searchChange }) => {\n  return (\n    <div className=\"search-box\">\n      <input\n        type=\"search\"\n        placeholder=\"アバターを検索\"\n        onChange={searchChange}\n        className=\"search-box-input\"\n      />\n      <p>アルファベットでタイプしてみよう！</p>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './card.styles.scss';\n\nconst Card = ({ name, email, id }) => {\n  return (\n    <Link to={`/avatars/${id}`}>\n      <div className=\"card\">\n        <img\n          src={`https://robohash.org/${id}?set=set4`}\n          alt=\"avatars\"\n          className=\"card-image\"\n        />\n        <div className=\"card-profile\">\n          <h2 className=\"card-name\">{name}</h2>\n          <p className=\"card-email\">{email}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport Card from '../card/card.component';\n\nimport uuid from 'uuid/v4';\n\nimport './card-list.styles.scss';\n\nconst CardList = ({ avatars }) => {\n  return (\n    <div className=\"card-list\">\n      {avatars.map(({ ...otherProps }) => {\n        return <Card key={uuid()} {...otherProps} />;\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from 'react';\n\nimport './scroll.styles.scss';\n\nconst Scroll = props => {\n  return <div className=\"scroll\">{props.children}</div>;\n};\n\nexport default Scroll;\n","import React, { useState, useEffect } from 'react';\nimport SearchBox from '../searchbox/search-box.component';\nimport CardList from '../cardList/card-list.component';\nimport Scroll from '../scroll/scroll.component';\nimport Spinner from '../spinner/spinner.component';\n\nimport './directory.styles.scss';\n\nconst Directory = () => {\n  const [avatars, setAvatars] = useState([]);\n  const [searchfield, setSearchField] = useState('');\n\n  useEffect(() => {\n    const getAvatars = async () => {\n      const responseAvatar = await fetch(\n        'https://jsonplaceholder.typicode.com/users'\n      );\n      const jsonAvatar = await responseAvatar.json();\n\n      setAvatars(jsonAvatar);\n    };\n\n    getAvatars();\n  }, []);\n\n  const onSearchChange = e => {\n    setSearchField(e.target.value);\n  };\n\n  const filterdAvatars = avatars.filter(avatar => {\n    return avatar.name.toLowerCase().includes(searchfield.toLowerCase());\n  });\n\n  return (\n    <div className=\"directory\">\n      {avatars.length ? (\n        <React.Fragment>\n          <SearchBox searchChange={onSearchChange} />\n          <Scroll>\n            <CardList avatars={filterdAvatars} />\n          </Scroll>\n        </React.Fragment>\n      ) : (\n        <div className=\"directory\">\n          <Spinner />\n          <p>Loading Now...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Directory;\n","import React from 'react';\nimport Directory from '../../components/directory/directory.component';\n\nconst HomePage = () => {\n  return (\n    <div className=\"homepage\">\n      <Directory />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Nav from '../components/nav/nav.component';\nimport NotFound from '../pages/not-found.component';\nimport AvatarDetails from '../components/avatar-details/avatar-details.component';\nimport About from '../pages/about/about.component';\nimport HomePage from '../pages/homepage/homepage.component';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/avatars/:id\" component={AvatarDetails} />\n        <Route path=\"/about\" component={About} />\n        <Route component={NotFound} />>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}